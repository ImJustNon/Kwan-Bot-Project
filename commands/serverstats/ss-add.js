const db = require('../../database/quickmongo.js');
const database = require('quick.db');
const { PREFIX } = require('../../config.js');
const { MessageEmbed } = require('discord.js');

module.exports = {
    config: {
        name: 'ss-add',
        aliases: [],
        description: 'add more option , and create channel , and category',
    },
    run: async(bot, message, args) => {
        if (!message.member.hasPermission("ADMINISTRATOR")) return message.channel.send("**‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏≠‡∏ô‡πà‡∏∞‡∏Ñ‡∏∞ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏® [ADMINISTRATOR] ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πà‡∏Ñ‡πà‡∏∞**");
        let prefix;
        if (message.author.bot || message.channel.type === "dm") return;
        try {
            let fetched = await database.fetch(`prefix_${message.guild.id}`);
            if (fetched == null) {
                prefix = PREFIX 
            } 
            else {
                prefix = fetched
            }
        } 
        catch (e) {
            console.log(e)
        };
        
        const activate = await db.get(`stats_${message.guild.id}`);
        const memberstatus = await db.get(`stats_${message.guild.id}_add_status_1`);
        const statspage = new MessageEmbed()
        .setAuthor(`‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡∏≠‡∏á ${message.guild.name}`, message.guild.iconURL())
        .setColor('#fcba03')    
        .addField(`:green_circle: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å : ${memberstatus || ' \‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'}`,`\` ${prefix}ss-add -status  < voice/text > \``, false)

        .setFooter('K w a n')
        .setTimestamp()
        
        if(activate == null) return message.channel.send('‡πÇ‡∏õ‡∏£‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏ô‡πà‡∏∞‡∏Ñ‡∏∞')
        if(!args[0]) return message.channel.send(statspage);
        if(args[0].toLowerCase() == '-status'){
            if(memberstatus !== null) return message.channel.send('‡πÄ‡∏≠‡πä‡∏∞! ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÄ‡πÄ‡∏•‡πâ‡∏ß‡∏ô‡πà‡∏∞‡∏Ñ‡∏∞');
            if(!args[1]) return message.channel.send('‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πà‡∏∞‡∏Ñ‡∏∞');
            if(args[1].toLowerCase() == 'voice'){
                await message.guild.channels.create(`üü¢ | ${message.guild.members.cache.filter(m => m.presence?.status == 'online').size} ‚ûñ ‚õî | ${message.guild.members.cache.filter(m => m.presence?.status == 'dnd').size}`,{
                    type: `voice`,
                })
                .then(async (channel) => {
                    await db.set(`stats_${message.guild.id}_add_status_1`,channel.id);
                    await channel.updateOverwrite(message.channel.guild.roles.everyone, { VIEW_CHANNEL: true, CONNECT: false });
                });
                await message.guild.channels.create(`üåô | ${message.guild.members.cache.filter(m => m.presence?.status == 'idle').size} ‚ûñ ‚ö´ | ${message.guild.members.cache.filter(m => m.presence?.status == 'offline' || !m.presence).size}`,{
                    type: `voice`,
                })
                .then(async (channel) => {
                    await db.set(`stats_${message.guild.id}_add_status_2`,channel.id);
                    await channel.updateOverwrite(message.channel.guild.roles.everyone, { VIEW_CHANNEL: true, CONNECT: false });
                });
                await db.set(`stats_${message.guild.id}_add_status_activate`,'true').then(async()=>{
                    await message.channel.send(`:white_check_mark: ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞`);
                });
            }
            else if(args[1].toLowerCase() == 'text' || 'txt'){
                await message.guild.channels.create(`üü¢${message.guild.members.cache.filter(m => m.presence?.status == 'online').size}-‚õî${message.guild.members.cache.filter(m => m.presence?.status == 'dnd').size}`,{
                    type: `text`,
                })
                .then(async (channel) => {
                    await db.set(`stats_${message.guild.id}_add_status_1`,channel.id);
                    await channel.updateOverwrite(message.channel.guild.roles.everyone, { VIEW_CHANNEL: true, SEND_MESSAGES: false, READ_MESSAGE_HISTORY: false });
                });
                await message.guild.channels.create(`üåô${message.guild.members.cache.filter(m => m.presence?.status == 'idle').size}-‚ö´${message.guild.members.cache.filter(m => m.presence?.status == 'offline' || !m.presence).size}`,{
                    type: `text`,
                })
                .then(async (channel) => {
                    await db.set(`stats_${message.guild.id}_add_status_2`,channel.id);
                    await channel.updateOverwrite(message.channel.guild.roles.everyone, { VIEW_CHANNEL: true, SEND_MESSAGES: false, READ_MESSAGE_HISTORY: false });
                });
                await db.set(`stats_${message.guild.id}_add_status_activate`,'true').then(async()=>{
                    await message.channel.send(`:white_check_mark: ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞`);
                });
            }
            else{
                return message.channel.send(`‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ \`voice\` ‡∏´‡∏£‡∏∑‡∏≠ \`text\` ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡πà‡∏∞‡∏Ñ‡∏∞`);
            }
        }
        else if(args[0].toLowerCase() == '-role'){
            return;
        }
        else{
            return;
        }
    }
}